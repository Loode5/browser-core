@import 'variables';

  .overlay {
    position: fixed;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(96, 124, 133, 0.50);
    z-index: 12000;
  }

  .modal {
    max-height: calc(100% - 100px);
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    outline: none;

    .modal-header {
      top: 18px;
      font: 18px $modal-header-color;
      font-weight: 400;

      .closeForm {
        background: url(../images/delete-icon.svg) no-repeat center;
        background-size: cover;
        position: absolute;
        float:right;
        right:20px;
        top: 25px;
        margin: 0px;
        width: 34px;
        height: 34px;
        display: inline;
        opacity: 0.5;
        cursor: pointer;
        text-align: right;
        color: #ccc;
        font-size: 18px;
        border: none;
        outline:none;

        &:hover {
          opacity: 1;
          transition: opacity 0.5s ease;
        }
      }
    }

    form {
      background: #FFF;
      width: 438px;
      height: 237px;
      padding: 31px;
      outline: none;
      overflow: hidden;
      border: none;
      border-radius: 4px;
      box-shadow: 0px 2px 35px rgba(0,0,0,0.27);
    }

    .field {
      display: flex;
      font: 14px #fff;
      font-weight: 500;
      flex-flow: column-reverse;
      margin-bottom:22px;
      margin-top: 13px;
    }

    /* LABEL ======================================= */
    label {
      color:$modal-input-inactive-color;
      display: inline;
      font-size:10px;
      font-weight:normal;
      position: absolute;
    }

    /**
    * Make the field a flex-container, reverse the order so label is on top.
    */

    /**
    * Add a transition to the label and input.
    * I'm not even sure that touch-action: manipulation works on
    * inputs, but hey, it's new and cool and could remove the
    * pesky delay.
    */
    label, input {
      transition: all 0.2s;
      position: relative;
      touch-action: manipulation;
    }

    input {
      font-size:14px;
      position: relative;
      border:0;
      border-bottom:1px solid $modal-input-inactive-color;
      -webkit-appearance: none;
      padding-bottom: 7.5px;
      border-radius: 0;
      width: 376px;
      cursor: text;
    }

    input:focus {
      outline: 0;
      border-bottom: 2px solid $color-cliqz-blue;
      padding-bottom: 7.5px;
    }

    /**
    * Translate down and scale the label up to cover the placeholder,
    * when following an input (with placeholder-shown support).
    * Also make sure the label is only on one row, at max 2/3rds of the
    * fieldâ€”to make sure it scales properly and doesn't wrap.
    */
    input:placeholder-shown + label {
      cursor: text;
      max-width: 66.66%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transform-origin: left bottom;
      transform: translate(0, 1.2rem) scale(1.4);
    }
    /**
    * By default, the placeholder should be transparent. Also, it should
    * inherit the transition.
    */
    ::-webkit-input-placeholder {
      opacity: 0;
      transition: inherit;
    }
    /**
    * Show the placeholder when the input is focused.
    */
    input:focus::-webkit-input-placeholder {
      opacity: 1;
    }
    /**
    * When the element is focused, remove the label transform.
    * Also, do this when the placeholder is _not_ shown, i.e. when
    * there's something in the input at all.
    */
    input:not(:placeholder-shown) + label,
    input:focus + label {
      transform: translate(0, 0) scale(1);
      color:$color-cliqz-blue;

    }

    .submit {
      position: absolute;
      bottom:22px;
      background-color: $color-cliqz-blue;
      height: 30px;
      width: 110px;
      font: 14px #fff;
      font-weight: 500;
      color: #fff;
      margin: 0px;
      padding: 0px 15px 0px 15px;
      padding-top:0px;
      border-radius: 2px;
      outline: none;
      letter-spacing: 1px;
      border: none;
      cursor: pointer;

      &:disabled {
        background-color: #BFCBD6;
        cursor:auto;
      }

      &:hover:enabled, &:focus:enabled {
        background-color: $modal-button-hover-background;
      }
    }

    .errorMessage {
       color: $modal-error-color !important;
    }

    .errorIcon {
      background: $modal-dial-invalid-url-background;
      position: absolute;
      top: 78px;
      right: 34px;
      width: 15px;
      height: 15px;
    }

    .deleteBox {
      color: $modal-header-color;
      float: right;
      overflow: hidden;
      font-size: 12px;
      margin-top: 4px;

      button {
        background: $modal-dial-delete-active-background;
        border:none;
        text-decoration:none;
        width: 20px;
        height: 20px;
      }

      span {
        position: relative;
        top: 3px;
      }

      &:hover, &:focus {
        button {
          cursor: pointer;
          background: $modal-dial-delete-hover-background;
          transition: background 0.5s ease;
        }

        span {
          cursor: pointer;
          color: $modal-error-color;
        }
      }
    }
  }
