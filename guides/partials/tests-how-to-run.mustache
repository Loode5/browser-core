<h3>
  How to run
</h3>

<h4>
  ./fern.js serve
</h4>

<p>
  You can build and install the extension (without running tests) by executing:
</p>

```
./fern.js serve
```

<p>
  This will launch a default version of Firefox with the local custom-built extension.
  Any change in the `navigation-extension` folder and its subdirectories will re-build
  the extension automatically and re-install it in the same Firefox instance.
</p>

<p>
  Test pages have to be visited manually (see the [[#-url-options-|URL options]] section). The `serve` option does not run tests automatically.
</p>

<h4>
  .fern.js test
</h4>

<p>
  Builds and installs an extension in the default runner(s), unless a config file with [[#-launchers-|custom runner]]
  has been passed, and automatically starts running tests (from the page `http://localhost:4200/6206/tests/index.mustache`).
</p>

<p>
  Available flags include:
</p>

<ul>
  <li>`--ci [output]`: starts Testem in CI mode (runs in all available browsers one after another),</li>
  <li>`--grep [pattern]`: only run tests matching [pattern],</li>
  <li>`--fgrep [pattern]`: only run tests with file names matching [pattern],</li>
  <li>`--firefox [firefox path]`: specify Firefox path, if Firefox launcher will be used</li>
  <li>`-l --launchers [launchers]`: comma separted list of launchers.</li>
</ul>

<h4>
  ./fern.js serve/test [config]
</h4>

<p>
  Passing a path to a config `*.json` file will serve / run tests in custom-built extension using
  the specific configuration. e.g.:
</p>

```
./fern.js test configs/browser.js
```

<p>
  This will run all the tests using the `configs/browser.js` configuration.
  You can run tests without a config value, i.e. `./fern.js test`, which will launch tests with `configs/jenkins.json`.
</p>

<h4>
  ./fern.js serve/test --firefox [exe]
</h4>

<p>
  Passing a `--firefox` flag to the `./fern.js` with a path to a specific Firefox executable will
  override the default executable and install the extension in the specific FF version,. e.g.:
</p>

```
./fern.js serve --firefox /Applications/Firefox55.app/
```

<h4>
  URL options
</h4>

<p>
  Tests based on Firefox are opening URL `chrome://cliqz/content/firefox-tests/index.html`. Additional
  parameters can be passed as an extension to URL:
</p>
<ul>
  <li>`closeOnFinish`:
    <ul>
      <li>`1` to close the browser after tests are done,</li>
      <li>`0` to keep the browser open,</li>
    </ul>
  </li>
  <li>`forceExtensionReload`:
    <ul>
      <li>`0` to load extension only once at the beginning,</li>
      <li>`0.5` to reload extension every other test,</li>
      <li>`1` to reload extension before every single test,</li>
    </ul>
  </li>
  <li>`grep`:
    <ul>
      <li>pass any string to match text from `describe`, `context` and / or `it` blocks
          and run only the matching tests.</li>
    </ul>
  </li>
</ul>

<p>
  First parameter has to be passed after `?`, next parameters after `&`. Values of parameters
  are passed with `=`, e.g.:
</p>

```
chrome://cliqz/content/firefox-tests/index.html?closeOnFinish=1&forceExtensionReload=0
  &grep=dropdown
```

<h3>
  Launchers
</h3>

<p>
  `config/*.json` configuration files specify in the <em>testem_launchers</em> field which test
launchers are supposed to be running. You can choose from the following:
</p>

<ul>
  <li>pre-defined Test'em browser launchers like Chrome,</li>
  <li>unit-node,</li>
  <li>firefox-web-ext,</li>
  <li>firefox-web-ext-stresstest,</li>
  <li>chromium-selenium.</li>
</ul>

<p>
  If your `*.json` file has specified more than one launcher and you want to run tests using only one of
them, you can execute the `./fern.js test` command with a `-l` option, e.g.:
</p>

```
./fern.js test configs/jenkins.json -l unit-node
```

<h4>
  unit-node
</h4>

<p>
  Runs all <a href="./test-guidelines.html#unit-tests2">unit tests</a> and shows the result in the console output.
</p>

<h4>
  firefox-web-ext
</h4>

<p>
  Opens `resource://cliqz/firefox-tests/run-testem.html`. This file is located in folder
  `./modules/firefox-tests/dist/`.
</p>

<p>`run-testem.html` opens the test page with parameters `closeOnFinish=1` and
  `forceExtensionReload=0`, which means the browser will close after tests are finished and
  extension will be loaded only once (see [[#-url-options-|URL options]] for more details).
</p>

<h4>
  firefox-web-ext-stresstest
</h4>

<p>
  Opens `resource://cliqz/firefox-tests/run-testem-stresstest.html`. This file is located in folder
  `./modules/firefox-tests/dist/`.
</p>

<p>`run-testem.html` opens the test page with parameters `closeOnFinish=1` and
  `forceExtensionReload=1`, which means the browser will close after tests are finished and
  extension will be reloaded every second test (see [[#-url-options-|URL options]] for more details).
</p>

<h4>
  chromium-selenium
</h4>

<p>
  Opens `chrome-extension://ekfhhggnbajmjdmgihoageagkeklhema/modules/chromium-tests/test.html`.
  This file is located in folder `./modules/chromium-tests/dist/`.
</p>
